#!/usr/bin/env bash
set -Eeuo pipefail

APP="smart-ssl"
VERSION="0.2.0"

CONF_DIR="/etc/${APP}"
DOM_DIR="${CONF_DIR}/domains"
MAIN_CONF="${CONF_DIR}/config.ini"
CF_CREDS="/root/.secrets/cloudflare.ini"

die() { echo "ERROR: $*" >&2; exit 1; }
ensure_root() { [[ ${EUID:-0} -eq 0 ]] || die "Run as root."; }

menu() {
  ensure_root
  while true; do
    clear
    echo "=== Smart-SSL Main Menu ==="
    echo "1) Install dependencies"
    echo "2) Setup (email + Cloudflare token)"
    echo "3) Add / Issue certificate"
    echo "4) List certificates"
    echo "5) Enable auto-renew"
    echo "6) Dry-run renewal test"
    echo "7) Rotate Cloudflare token"
    echo "8) Remove a certificate"
    echo "0) Exit"
    echo
    read -rp "Choice: " c
    case "$c" in
      1) apt update && apt install -y certbot python3-certbot-dns-cloudflare openssl;;
      2) read -rp "Email: " e; mkdir -p /root/.secrets; echo "Paste CF API token:"; echo "dns_cloudflare_api_token = $(</dev/stdin)" > $CF_CREDS; chmod 600 $CF_CREDS; echo "email=$e" > $MAIN_CONF;;
      3) read -rp "Domain: " dom; certbot certonly --dns-cloudflare --dns-cloudflare-credentials "$CF_CREDS" -d "$dom" -m "$(grep '^email=' $MAIN_CONF|cut -d= -f2)" --agree-tos --no-eff-email --non-interactive;;
      4) certbot certificates;;
      5) systemctl enable --now certbot.timer;;
      6) certbot renew --dry-run;;
      7) echo "Paste NEW CF token:"; echo "dns_cloudflare_api_token = $(</dev/stdin)" > $CF_CREDS; chmod 600 $CF_CREDS;;
      8) read -rp "Domain to remove: " dom; certbot delete --cert-name "$dom";;
      0) exit 0;;
    esac
    read -rp "Press Enter to continue..." _
  done
}

menu
